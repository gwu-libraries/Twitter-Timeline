<?php

function getTweetBlock($twitterAccount) {
    
    // set cache file name and path
    $cacheFile = 'twitterCache-'.$twitterAccount;
    $path = '/tmp/' . $cacheFile . '.cache';
    
    // checks to see if cached file is older than xx seconds, if so updates cache
    if ((!file_exists($path) || time() - filemtime($path) > 120) && $cache = fopen($path, 'w+'))
    {
        $theBlock = getTweets($twitterAccount); // get block from scratch if old
        fwrite($cache, $theBlock); // write block to cache
        fclose($cache);
    }
    else
    {
        $theBlock = file_get_contents($path); // get block from cache file
    }
    
    if ($theBlock == '' || $theBlock == '<h4>(Twitter is not available)</h4>') // fallback
    {
        $theBlock = "<h4>(Twitter is not available)</h4>";
        return $theBlock;
        break;
    }
    
    
    return $theBlock;
}

function getTweets($twitterAccount) {
    
    require 'tmhOAuth/tmhOAuth.php';
    require 'tmhOAuth/tmhUtilities.php';
    include 'tokens.php'; // create this file to store your consumer_key, consumer_secret, user_token and user_secret as the variables below
    
    $tmhOAuth = new tmhOAuth(array(
       'consumer_key' => $consumerKey,
       'consumer_secret' => $consumerSecret,
       'user_token' => '',
       'user_secret' => '',
       ));
    
    $pathVar = '1/statuses/user_timeline/'.$twitterAccount;
    $code = $tmhOAuth->request('GET', $tmhOAuth->url($pathVar, 'json'));

    $theJSON = $tmhOAuth->response['response'];
    
    if (is_object(json_decode($theJSON)) || $theJSON == '') // fallback
        {
        $theResult = "<h4>(Twitter is not available)</h4>";
        return $theResult;
        break;
        }
    
    else
        {
        
        $decode = json_decode($theJSON, true); //getting the file content as array
        
        // loop through array and assign values to $screenName
        for ($i = 0; $i < 8; ++$i) {
            ${screenName . $i} =  $decode[$i][user][screen_name];
        }
        
        $profileImage = $decode[0][user][profile_image_url];

        $blockHeader = "<div style='width:100%;'><div class='twitter-block'><img src='".$profileImage."' width='20' height='20' /> <a href='http://twitter.com/".$twitterAccount."' target='_blank'>Latest from @".$twitterAccount."</a></div></div>";
        
        //a few things we could pull from the json
        
        //$decode[0][user][profile_image_url] (getting the profile image)
        //$decode[0][user][name] (getting the username)
        //$decode[0][user][url] (getting the web site address)
        //$decode[0][user][location] (user location)
        //$decode[0][user][statuses_count] (number of updates)
        //$decode[0][user][followers_count] (number of followers)
        //$decode[0][user][friends_count] (following)
        //$decode[0][user][description] (user description)
        
        // loop through array to set $tweet var and make links active
        for ($i = 0; $i < 8; ++$i) {
            ${tweet . $i} = preg_replace('"\b(http://\S+)"', '<a href="$1">$1</a>', $decode[$i][text]);
        }
        
        // full block output (formatted for Libsite7 Drupal theme, change as needed)
        for ($i = 0; $i < 8; ++$i) {
            $eachTweet = "<p class='twitter-text'><a href='http://twitter.com/".(${screenName . $i})."'>@".(${screenName . $i})."</a>: ".(${tweet . $i})."</p>";
            $formattedTweets .= $eachTweet;
        }
    
        $theResult = $blockHeader."<div class='twitter-feed'>".$formattedTweets."</div>";
                    
    }
    
    return $theResult;
}